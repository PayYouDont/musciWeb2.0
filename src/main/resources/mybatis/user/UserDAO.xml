<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.payudon.user.dao.UserDAO">
	<resultMap id="BaseResultMap"
		type="com.payudon.user.entity.User">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="account" jdbcType="VARCHAR" property="account" />
		<result column="password" jdbcType="VARCHAR"
			property="password" />
		<result column="nick" jdbcType="VARCHAR" property="nick" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="phone" jdbcType="VARCHAR" property="phone" />
		<result column="status" jdbcType="TINYINT" property="status" />
		<result column="email" jdbcType="VARCHAR" property="email" />
		<result column="token" jdbcType="VARCHAR" property="token" />
		<result column="activate_time" jdbcType="TIMESTAMP"
			property="activateTime" />
		<result column="create_time" jdbcType="TIMESTAMP"
			property="createTime" />
		<result column="update_time" jdbcType="TIMESTAMP"
			property="updateTime" />
	</resultMap>
	<sql id="Base_Column_List">
		id, account, `password`, nick, `name`, phone, `status`, email, token,
		activate_time,
		create_time, update_time
	</sql>
	<select id="selectByPrimaryKey"
		parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from user
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey"
		parameterType="java.lang.Integer">
		delete from user
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.payudon.user.entity.User">
		insert into user (id, account, `password`,
		nick, `name`, phone,
		`status`, email, token,
		activate_time, create_time, update_time
		)
		values (#{id,jdbcType=INTEGER}, #{account,jdbcType=VARCHAR},
		#{password,jdbcType=VARCHAR},
		#{nick,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR},
		#{status,jdbcType=TINYINT}, #{email,jdbcType=VARCHAR},
		#{token,jdbcType=VARCHAR},
		#{activateTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
		)
	</insert>
	<insert id="insertSelective"
		parameterType="com.payudon.user.entity.User">
		insert into user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="account != null">
				account,
			</if>
			<if test="password != null">
				`password`,
			</if>
			<if test="nick != null">
				nick,
			</if>
			<if test="name != null">
				`name`,
			</if>
			<if test="phone != null">
				phone,
			</if>
			<if test="status != null">
				`status`,
			</if>
			<if test="email != null">
				email,
			</if>
			<if test="token != null">
				token,
			</if>
			<if test="activateTime != null">
				activate_time,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="account != null">
				#{account,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="nick != null">
				#{nick,jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="phone != null">
				#{phone,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				#{status,jdbcType=TINYINT},
			</if>
			<if test="email != null">
				#{email,jdbcType=VARCHAR},
			</if>
			<if test="token != null">
				#{token,jdbcType=VARCHAR},
			</if>
			<if test="activateTime != null">
				#{activateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.payudon.user.entity.User">
		update user
		<set>
			<if test="account != null">
				account = #{account,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				`password` = #{password,jdbcType=VARCHAR},
			</if>
			<if test="nick != null">
				nick = #{nick,jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				`name` = #{name,jdbcType=VARCHAR},
			</if>
			<if test="phone != null">
				phone = #{phone,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				`status` = #{status,jdbcType=TINYINT},
			</if>
			<if test="email != null">
				email = #{email,jdbcType=VARCHAR},
			</if>
			<if test="token != null">
				token = #{token,jdbcType=VARCHAR},
			</if>
			<if test="activateTime != null">
				activate_time = #{activateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.payudon.user.entity.User">
		update user
		set account = #{account,jdbcType=VARCHAR},
		`password` = #{password,jdbcType=VARCHAR},
		nick = #{nick,jdbcType=VARCHAR},
		`name` = #{name,jdbcType=VARCHAR},
		phone = #{phone,jdbcType=VARCHAR},
		`status` = #{status,jdbcType=TINYINT},
		email = #{email,jdbcType=VARCHAR},
		token = #{token,jdbcType=VARCHAR},
		activate_time = #{activateTime,jdbcType=TIMESTAMP},
		create_time = #{createTime,jdbcType=TIMESTAMP},
		update_time = #{updateTime,jdbcType=TIMESTAMP}
		where id = #{id,jdbcType=INTEGER}
	</update>
	<select id="list" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from user
		<where>
			<if test="account != null">
				and account = #{account,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				and `password` = #{password,jdbcType=VARCHAR}
			</if>
			<if test="nick != null">
				and nick = #{nick,jdbcType=VARCHAR}
			</if>
			<if test="name != null">
				and `name` = #{name,jdbcType=VARCHAR}
			</if>
			<if test="phone != null">
				and phone = #{phone,jdbcType=VARCHAR}
			</if>
			<if test="status != null">
				and `status` = #{status,jdbcType=TINYINT}
			</if>
			<if test="email != null">
				and email = #{email,jdbcType=VARCHAR}
			</if>
			<if test="token != null">
				and token = #{token,jdbcType=VARCHAR}
			</if>
			<if test="activateTime != null">
				and activate_time = #{activateTime,jdbcType=TIMESTAMP}
			</if>
			<if test="createTime != null">
				and create_time = #{createTime,jdbcType=TIMESTAMP}
			</if>
			<if test="updateTime != null">
				and update_time = #{updateTime,jdbcType=TIMESTAMP}
			</if>
		</where>
		<choose>
			<when test="sort != null and sort.trim() != ''">
				order by ${order} ${sort}
			</when>
			<otherwise>
				order by id desc
			</otherwise>
		</choose>
		<if test="begin != null and pageSize != null">
			limit #{begin},#{pageSize}
		</if>
	</select>
	<select id="count" resultType="int">
		select count(*) from user
		<where>
			<if test="account != null">
				and account = #{account,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				and `password` = #{password,jdbcType=VARCHAR}
			</if>
			<if test="nick != null">
				and nick = #{nick,jdbcType=VARCHAR}
			</if>
			<if test="name != null">
				and `name` = #{name,jdbcType=VARCHAR}
			</if>
			<if test="phone != null">
				and phone = #{phone,jdbcType=VARCHAR}
			</if>
			<if test="status != null">
				and `status` = #{status,jdbcType=TINYINT}
			</if>
			<if test="email != null">
				and email = #{email,jdbcType=VARCHAR}
			</if>
			<if test="token != null">
				and token = #{token,jdbcType=VARCHAR}
			</if>
			<if test="activateTime != null">
				and activate_time = #{activateTime,jdbcType=TIMESTAMP}
			</if>
			<if test="createTime != null">
				and create_time = #{createTime,jdbcType=TIMESTAMP}
			</if>
			<if test="updateTime != null">
				and update_time = #{updateTime,jdbcType=TIMESTAMP}
			</if>
		</where>
	</select>
</mapper>